'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Style = exports.Text = exports.View = exports.Easing = exports.Animated = exports.AnimatedView = exports.ScrollView = exports.Button = exports.matrixKey = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RNScrollViewStyle = {
  flex: 1,
  position: 'relative'
};

var Button = function Button(props) {
  return _react2.default.createElement(_reactNative.TouchableOpacity, props);
};

var ScrollView = function (_Component) {
  _inherits(ScrollView, _Component);

  function ScrollView() {
    _classCallCheck(this, ScrollView);

    return _possibleConstructorReturn(this, (ScrollView.__proto__ || Object.getPrototypeOf(ScrollView)).apply(this, arguments));
  }

  _createClass(ScrollView, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          onRef = _props.onRef,
          style = _props.style,
          vertical = _props.vertical,
          otherProps = _objectWithoutProperties(_props, ['onRef', 'style', 'vertical']);

      var extraProps = {};
      if (onRef) {
        extraProps.ref = onRef;
      }
      extraProps.horizontal = !vertical;
      var flexDirection = vertical ? 'column' : 'row';

      return _react2.default.createElement(_reactNative.ScrollView, _extends({
        style: [RNScrollViewStyle, { flexDirection: flexDirection }],
        contentContainerStyle: style,
        showsHorizontalScrollIndicator: false,
        scrollEventThrottle: 1,
        bounces: false
      }, extraProps, otherProps));
    }
  }]);

  return ScrollView;
}(_react.Component);

var AnimatedView = _reactNative.Animated.View;

var Style = {
  containerStyle: {},
  scrollViewStyle: {},
  underlineStyle: {},
  tabStyle: {}
};

var matrixKey = 'matrix';

exports.matrixKey = matrixKey;
exports.Button = Button;
exports.ScrollView = ScrollView;
exports.AnimatedView = AnimatedView;
exports.Animated = _reactNative.Animated;
exports.Easing = _reactNative.Easing;
exports.View = _reactNative.View;
exports.Text = _reactNative.Text;
exports.Style = Style;