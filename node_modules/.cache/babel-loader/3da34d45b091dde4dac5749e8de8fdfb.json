{"ast":null,"code":"import React from 'react';\nimport rebound, { SpringConfig } from 'rebound';\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar performanceNow = createCommonjsModule(function (module) {\n  // Generated by CoffeeScript 1.12.2\n  (function () {\n    var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n    if (typeof performance !== \"undefined\" && performance !== null && performance.now) {\n      module.exports = function () {\n        return performance.now();\n      };\n    } else if (typeof process !== \"undefined\" && process !== null && process.hrtime) {\n      module.exports = function () {\n        return (getNanoSeconds() - nodeLoadTime) / 1e6;\n      };\n\n      hrtime = process.hrtime;\n\n      getNanoSeconds = function getNanoSeconds() {\n        var hr;\n        hr = hrtime();\n        return hr[0] * 1e9 + hr[1];\n      };\n\n      moduleLoadTime = getNanoSeconds();\n      upTime = process.uptime() * 1e9;\n      nodeLoadTime = moduleLoadTime - upTime;\n    } else if (Date.now) {\n      module.exports = function () {\n        return Date.now() - loadTime;\n      };\n\n      loadTime = Date.now();\n    } else {\n      module.exports = function () {\n        return new Date().getTime() - loadTime;\n      };\n\n      loadTime = new Date().getTime();\n    }\n  }).call(commonjsGlobal);\n});\nvar root = typeof window === 'undefined' ? commonjsGlobal : window,\n    vendors = ['moz', 'webkit'],\n    suffix = 'AnimationFrame',\n    raf = root['request' + suffix],\n    caf = root['cancel' + suffix] || root['cancelRequest' + suffix];\n\nfor (var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix];\n  caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];\n} // Some versions of FF have rAF but not cAF\n\n\nif (!raf || !caf) {\n  var last = 0,\n      id = 0,\n      queue = [],\n      frameDuration = 1000 / 60;\n\n  raf = function raf(callback) {\n    if (queue.length === 0) {\n      var _now = performanceNow(),\n          next = Math.max(0, frameDuration - (_now - last));\n\n      last = next + _now;\n      setTimeout(function () {\n        var cp = queue.slice(0); // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n\n        queue.length = 0;\n\n        for (var i = 0; i < cp.length; i++) {\n          if (!cp[i].cancelled) {\n            try {\n              cp[i].callback(last);\n            } catch (e) {\n              setTimeout(function () {\n                throw e;\n              }, 0);\n            }\n          }\n        }\n      }, Math.round(next));\n    }\n\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    });\n    return id;\n  };\n\n  caf = function caf(handle) {\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].handle === handle) {\n        queue[i].cancelled = true;\n      }\n    }\n  };\n}\n\nvar raf_1 = function raf_1(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn);\n};\n\nvar cancel = function cancel() {\n  caf.apply(root, arguments);\n};\n\nvar polyfill = function polyfill(object) {\n  if (!object) {\n    object = root;\n  }\n\n  object.requestAnimationFrame = raf;\n  object.cancelAnimationFrame = caf;\n};\n\nraf_1.cancel = cancel;\nraf_1.polyfill = polyfill;\n\nvar MultiSpring =\n/** @class */\nfunction () {\n  function MultiSpring(system, config) {\n    this.springs = [];\n    this.system = system;\n    this.config = config;\n  }\n\n  MultiSpring.prototype.destroy = function () {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.destroy();\n    }\n  };\n\n  MultiSpring.prototype.getCurrentValue = function () {\n    return this.springs.map(function (s) {\n      return s.getCurrentValue();\n    });\n  };\n\n  MultiSpring.prototype.setCurrentValue = function (value, skipSetAtRest) {\n    for (var i = 0; i < value.length; i++) {\n      if (!this.springs[i]) this.springs[i] = this.system.createSpring();\n      this.springs[i].setCurrentValue(value[i], skipSetAtRest);\n    }\n  };\n\n  MultiSpring.prototype.getEndValue = function () {\n    return this.springs.map(function (s) {\n      return s.getEndValue();\n    });\n  };\n\n  MultiSpring.prototype.setEndValue = function (value) {\n    for (var i = 0; i < value.length; i++) {\n      if (!this.springs[i]) this.springs[i] = this.system.createSpringWithConfig(this.config);\n      this.springs[i].setEndValue(value[i]);\n    }\n  };\n\n  MultiSpring.prototype.getVelocity = function () {\n    return this.springs.map(function (s) {\n      return s.getVelocity();\n    });\n  };\n\n  MultiSpring.prototype.setAtRest = function () {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.setAtRest();\n    }\n  };\n\n  MultiSpring.prototype.setVelocity = function (value) {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.setVelocity(value);\n    }\n  };\n\n  MultiSpring.prototype.setRestSpeedThreshold = function (value) {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.setRestSpeedThreshold(value);\n    }\n  };\n\n  MultiSpring.prototype.setRestDisplacementThreshold = function (value) {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.setRestDisplacementThreshold(value);\n    }\n  };\n\n  MultiSpring.prototype.setOvershootClampingEnabled = function (value) {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.setOvershootClampingEnabled(value);\n    }\n  };\n\n  MultiSpring.prototype.addListener = function (value) {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.addListener(value);\n    }\n  };\n\n  MultiSpring.prototype.removeListener = function (value) {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.removeListener(value);\n    }\n  };\n\n  MultiSpring.prototype.removeAllListeners = function () {\n    for (var _i = 0, _a = this.springs; _i < _a.length; _i++) {\n      var spring = _a[_i];\n      spring.removeAllListeners();\n    }\n  };\n\n  return MultiSpring;\n}();\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction cssFunction(name) {\n  var params = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    params[_i - 1] = arguments[_i];\n  }\n\n  return function () {\n    var values = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      values[_i] = arguments[_i];\n    }\n\n    return name + \"(\" + params.map(function (p, i) {\n      return p(values[i]);\n    }) + \")\";\n  };\n}\n\nfunction px(n) {\n  return (n || 0) + \"px\";\n}\n\nfunction alpha(x) {\n  return \"\" + (x < 0 ? 0 : x > 1 ? 1 : x);\n}\n\nfunction ratio(n) {\n  return \"\" + n;\n}\n\nfunction deg(n) {\n  return n + \"deg\";\n}\n\nfunction colorComponent(x) {\n  return \"\" + (x < 0 ? 0 : x > 255 ? 255 : Math.round(x));\n}\n\nvar rgb = cssFunction('rgb', colorComponent, colorComponent, colorComponent);\nvar rgba = cssFunction('rgba', colorComponent, colorComponent, colorComponent, alpha);\nvar translate = cssFunction('translate', px, px);\nvar translate3d = cssFunction('translate3d', px, px, px);\nvar scale = cssFunction('scale', ratio, ratio);\nvar rotate = cssFunction('rotate', deg, deg);\nvar rotateZ = cssFunction('rotateZ', deg);\nvar skew = cssFunction('skew', deg, deg);\n\nfunction color(_a) {\n  var r = _a[0],\n      g = _a[1],\n      b = _a[2],\n      a = _a[3];\n  return typeof a === 'undefined' ? rgb(r, g, b) : rgba(r, g, b, a);\n}\n\nvar numericalProperties = {\n  top: px,\n  left: px,\n  right: px,\n  bottom: px,\n  width: px,\n  height: px,\n  opacity: alpha,\n  color: color,\n  background: color,\n  backgroundColor: color,\n  borderBottomColor: color,\n  borderColor: color,\n  borderLeftColor: color,\n  borderRightColor: color,\n  borderTopColor: color,\n  outlineColor: color,\n  textDecorationColor: color,\n  fontSize: px,\n  lineHeight: px,\n  letterSpacing: px\n};\nvar transformProperties = {\n  translateX: true,\n  translateY: true,\n  translateZ: true,\n  scaleX: true,\n  scaleY: true,\n  rotateX: true,\n  rotateY: true,\n  rotateZ: true,\n  skewX: true,\n  skewY: true\n};\n\nfunction toTransformStyle(_a) {\n  var tx = _a.translateX,\n      ty = _a.translateY,\n      tz = _a.translateZ,\n      sx = _a.scaleX,\n      sy = _a.scaleY,\n      rx = _a.rotateX,\n      ry = _a.rotateY,\n      rz = _a.rotateZ,\n      kx = _a.skewX,\n      ky = _a.skewY;\n  var transforms = [];\n\n  if (tz !== undefined) {\n    transforms.push(translate3d(tx || 0, ty || 0, tz || 0));\n  } else if (tx !== undefined || ty !== undefined) {\n    transforms.push(translate(tx || 0, ty || 0));\n  }\n\n  if (sx !== undefined || sy !== undefined) {\n    transforms.push(scale(sx || 1, sy || 1));\n  }\n\n  if (rx !== undefined || ry !== undefined) {\n    transforms.push(rotate(rx || 0, ry || 0));\n  }\n\n  if (rz !== undefined) {\n    transforms.push(rotateZ(rz || 0));\n  }\n\n  if (kx !== undefined || ky !== undefined) {\n    transforms.push(skew(kx || 0, ky || 0));\n  }\n\n  if (transforms.length === 0) return 'none';\n  return transforms.join(' ');\n}\n\nfunction toStyle(props) {\n  var transformProps = {};\n  var style = {};\n\n  for (var p in props) {\n    var val = props[p];\n    if (val === undefined || val === null) continue;\n\n    if (p in transformProperties) {\n      var prop = p;\n      transformProps[prop] = val;\n    } else if (p in numericalProperties) {\n      var prop = p; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      style[prop] = numericalProperties[prop](val);\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Unsupported prop', p);\n    }\n  }\n\n  return _assign({}, style, {\n    transform: toTransformStyle(transformProps)\n  });\n}\n\nvar springSystem = new rebound.SpringSystem();\n\nfunction usePersisted(value) {\n  var ref = React.useRef(value);\n  ref.current = value;\n  return ref;\n}\n\nfunction createSpring(startValue, tension, friction) {\n  var spring;\n\n  if (Array.isArray(startValue)) {\n    spring = new MultiSpring(springSystem, new SpringConfig(tension, friction));\n    spring.setCurrentValue(startValue);\n  } else {\n    spring = springSystem.createSpringWithConfig(new SpringConfig(tension, friction));\n    spring.setCurrentValue(startValue);\n  }\n\n  return spring;\n}\n\nfunction useAnimation(ref, props, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.animate,\n      animate = _c === void 0 ? true : _c,\n      _d = _b.tension,\n      tension = _d === void 0 ? 230 : _d,\n      _e = _b.friction,\n      friction = _e === void 0 ? 22 : _e,\n      _f = _b.delay,\n      delay = _f === void 0 ? 0 : _f,\n      _g = _b.displacementThreshold,\n      displacementThreshold = _g === void 0 ? 0.001 : _g,\n      _h = _b.speedThreshold,\n      speedThreshold = _h === void 0 ? 0.001 : _h,\n      _j = _b.clamp,\n      clamp = _j === void 0 ? false : _j,\n      onStart = _b.onStart,\n      onEnd = _b.onEnd;\n\n  var springs = React.useRef({});\n  var animating = React.useRef(0);\n  var onStartRef = usePersisted(onStart);\n  var onSpringActivate = React.useCallback(function () {\n    animating.current += 1;\n    animating.current === 1 && onStartRef.current && onStartRef.current();\n  }, [onStartRef]);\n  var onEndRef = usePersisted(onEnd);\n  var onSpringAtRest = React.useCallback(function () {\n    animating.current -= 1;\n    animating.current === 0 && onEndRef.current && onEndRef.current();\n  }, [onEndRef]);\n  var request = React.useRef(null);\n  var onSpringUpdate = React.useCallback(function () {\n    function performUpdate() {\n      if (!ref.current) return;\n      request.current = null;\n      var currentValues = {};\n\n      for (var prop in springs.current) {\n        currentValues[prop] = springs.current[prop].getCurrentValue();\n      }\n\n      var style = toStyle(currentValues);\n\n      for (var p in style) {\n        var prop = p;\n        ref.current.style[prop] = style[prop];\n      }\n    }\n\n    if (!request.current) {\n      request.current = raf_1(performUpdate);\n    }\n  }, [ref]);\n  React.useEffect(function () {\n    var _loop_1 = function _loop_1(prop) {\n      var value = props[prop];\n      if (value === undefined) return \"continue\";\n      var spring = springs.current[prop];\n\n      if (!spring) {\n        spring = springs.current[prop] = createSpring(value, tension, friction);\n        spring.setRestSpeedThreshold(speedThreshold);\n        spring.setRestDisplacementThreshold(displacementThreshold);\n        spring.setOvershootClampingEnabled(clamp);\n        spring.addListener({\n          onSpringActivate: onSpringActivate,\n          onSpringAtRest: onSpringAtRest,\n          onSpringUpdate: onSpringUpdate\n        });\n      }\n\n      if (!animate) {\n        spring.setCurrentValue(value);\n        return \"continue\";\n      }\n\n      if (delay) {\n        setTimeout(function () {\n          return spring.setEndValue(value);\n        }, delay);\n      } else {\n        spring.setEndValue(value);\n      }\n    };\n\n    for (var prop in props) {\n      _loop_1(prop);\n    }\n  }); // Cleanup\n\n  React.useEffect(function () {}, []);\n  return springs.current;\n}\n\nvar Animate = React.forwardRef(function (_a, forwardedRef) {\n  var _b = _a.animate,\n      animate = _b === void 0 ? true : _b,\n      _c = _a.tension,\n      tension = _c === void 0 ? 230 : _c,\n      _d = _a.friction,\n      friction = _d === void 0 ? 22 : _d,\n      _e = _a.delay,\n      delay = _e === void 0 ? 0 : _e,\n      _f = _a.displacementThreshold,\n      displacementThreshold = _f === void 0 ? 0.001 : _f,\n      _g = _a.speedThreshold,\n      speedThreshold = _g === void 0 ? 0.001 : _g,\n      _h = _a.clamp,\n      clamp = _h === void 0 ? false : _h,\n      _onStart = _a.onStart,\n      _onEnd = _a.onEnd,\n      children = _a.children,\n      props = __rest(_a, [\"animate\", \"tension\", \"friction\", \"delay\", \"displacementThreshold\", \"speedThreshold\", \"clamp\", \"onStart\", \"onEnd\", \"children\"]);\n\n  var _ref = React.useRef();\n\n  var animating = React.useRef(false);\n\n  var _j = React.useState(null),\n      setState = _j[1];\n\n  var latestChildren = React.useRef(children);\n  latestChildren.current = children;\n  var springs = useAnimation(_ref, props, {\n    animate: animate,\n    tension: tension,\n    friction: friction,\n    delay: delay,\n    displacementThreshold: displacementThreshold,\n    speedThreshold: speedThreshold,\n    clamp: clamp,\n    onStart: function onStart() {\n      animating.current = true;\n\n      if (typeof latestChildren.current === 'function') {\n        setState(null); // Trigger a re-render\n      }\n\n      _onStart && _onStart();\n    },\n    onEnd: function onEnd() {\n      animating.current = false;\n\n      if (typeof latestChildren.current === 'function') {\n        setState(null); // Trigger a re-render\n      }\n\n      _onEnd && _onEnd();\n    }\n  });\n  React.useImperativeHandle(forwardedRef, function () {\n    return {\n      setVelocity: function setVelocity(prop, value) {\n        var spring = springs[prop]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        spring && spring.setVelocity(value);\n      },\n      setCurrentValue: function setCurrentValue(prop, value) {\n        var spring = springs[prop]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        spring && spring.setCurrentValue(value);\n      },\n      getCurrentValue: function getCurrentValue(prop) {\n        var spring = springs[prop];\n        return spring && spring.getCurrentValue();\n      }\n    };\n  }, [springs]);\n\n  if (typeof children === 'function') {\n    children = children(animating.current);\n  }\n\n  var child = React.Children.only(children);\n  return React.cloneElement(child, {\n    ref: function ref(element) {\n      _ref.current = element; // Hack to forward ref to caller\n\n      if (child.ref && 'current' in child.ref) {\n        child.ref.current = element;\n      } else if (typeof child.ref === 'function') {\n        child.ref(element);\n      }\n    }\n  });\n});\nAnimate.displayName = 'Animate';\nexport { Animate, useAnimation };","map":null,"metadata":{},"sourceType":"module"}