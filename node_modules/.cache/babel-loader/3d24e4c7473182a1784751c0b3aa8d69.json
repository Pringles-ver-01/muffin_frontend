{"ast":null,"code":"import _slicedToArray from \"/Users/boogiewoogie/WebstormProjects/muffin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/boogiewoogie/WebstormProjects/muffin_frontend/src/components/login/opinion/opinionEdit/OpinionEdit.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"./opinionEdit.css\";\nimport Navbar from \"../../logined_navbar/Navbar\";\nimport Menu from \"../../menu/Menu\";\nimport axios from \"axios\";\n\nvar OpinionRegister = function OpinionRegister() {\n  var _useState = useState(JSON.parse(sessionStorage.getItem(\"opinionEdit\"))),\n      _useState2 = _slicedToArray(_useState, 2),\n      board = _useState2[0],\n      setBoard = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      boardTitle = _useState4[0],\n      setBoardTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      boardContent = _useState6[0],\n      setBoardContent = _useState6[1];\n\n  var url = \"http://localhost:8080/boards\";\n\n  var onChangeBoardTitle = function onChangeBoardTitle(e) {\n    setBoardTitle(e.target.value);\n  };\n\n  useEffect(function () {\n    console.log(board);\n    setBoardTitle(board.boardTitle);\n    setBoardContent(board.boardContent);\n  }, []);\n\n  var onChangeBoardContent = function onChangeBoardContent(value) {\n    setBoardContent(value);\n  };\n\n  var edit = function edit(e) {\n    e.preventDefault();\n    var boardJson = {\n      boardId: board.boardId,\n      boardTitle: boardTitle,\n      boardContent: boardContent,\n      user: JSON.parse(sessionStorage.getItem(\"logined_user\")),\n      viewCnt: board.viewCnt,\n      boardRegdate: board.boardRegdate,\n      commentList: board.commentList,\n      userId: JSON.parse(sessionStorage.getItem(\"logined_user\")).userId,\n      nickname: JSON.parse(sessionStorage.getItem(\"logined_user\")).nickname\n    };\n\n    if (boardTitle !== \"\" && boardContent !== \"\") {\n      console.log(boardJson);\n      axios.post(\"\".concat(url, \"/update\"), boardJson).then(function (response) {\n        alert(\"게시물 수정이 완료되었습니다.\");\n        sessionStorage.setItem(\"opinionDetail\", JSON.stringify(boardJson));\n        window.location.href = \"/opinion/detail\";\n      });\n    } else if (boardTitle === \"\") {\n      alert(\"제목을 입력해주세요.\");\n    } else {\n      alert(\"내용을 입력해주세요.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"documentroom_container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input input_title\",\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    type: \"text\",\n    value: boardTitle,\n    onChange: onChangeBoardTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactQuill, {\n    theme: \"snow\",\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    value: boardContent,\n    onChange: onChangeBoardContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-default bg-transparent hover:bg-blue-50 text-blue-500 hover:text-blue-600 btn-rounded btn-raised\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: function onClick(e) {\n      window.location.href = \"/opinion\";\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"\\uCDE8\\uC18C\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-default bg-blue-500 hover:bg-blue-600 text-white btn-rounded\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: edit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"\\uC218\\uC815\\uD558\\uAE30\")))))));\n};\n\nexport default OpinionRegister;","map":{"version":3,"sources":["/Users/boogiewoogie/WebstormProjects/muffin_frontend/src/components/login/opinion/opinionEdit/OpinionEdit.js"],"names":["React","useState","useEffect","Link","ReactQuill","Navbar","Menu","axios","OpinionRegister","JSON","parse","sessionStorage","getItem","board","setBoard","boardTitle","setBoardTitle","boardContent","setBoardContent","url","onChangeBoardTitle","e","target","value","console","log","onChangeBoardContent","edit","preventDefault","boardJson","boardId","user","viewCnt","boardRegdate","commentList","userId","nickname","post","then","response","alert","setItem","stringify","window","location","href","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"./opinionEdit.css\";\nimport Navbar from \"../../logined_navbar/Navbar\";\nimport Menu from \"../../menu/Menu\";\nimport axios from \"axios\";\n\nconst OpinionRegister = () => {\n  const [board, setBoard] = useState(\n    JSON.parse(sessionStorage.getItem(\"opinionEdit\"))\n  );\n  const [boardTitle, setBoardTitle] = useState(\"\");\n  const [boardContent, setBoardContent] = useState(\"\");\n  const url = \"http://localhost:8080/boards\";\n  const onChangeBoardTitle = (e) => {\n    setBoardTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(board);\n    setBoardTitle(board.boardTitle);\n    setBoardContent(board.boardContent);\n  }, []);\n\n  const onChangeBoardContent = (value) => {\n    setBoardContent(value);\n  };\n\n  const edit = (e) => {\n    e.preventDefault();\n    const boardJson = {\n      boardId: board.boardId,\n      boardTitle: boardTitle,\n      boardContent: boardContent,\n      user: JSON.parse(sessionStorage.getItem(\"logined_user\")),\n      viewCnt: board.viewCnt,\n      boardRegdate: board.boardRegdate,\n      commentList: board.commentList,\n      userId: JSON.parse(sessionStorage.getItem(\"logined_user\")).userId,\n      nickname: JSON.parse(sessionStorage.getItem(\"logined_user\")).nickname,\n    };\n    if (boardTitle !== \"\" && boardContent !== \"\") {\n      console.log(boardJson);\n      axios.post(`${url}/update`, boardJson).then((response) => {\n        alert(\"게시물 수정이 완료되었습니다.\");\n        sessionStorage.setItem(\"opinionDetail\", JSON.stringify(boardJson));\n        window.location.href = \"/opinion/detail\";\n      });\n    } else if (boardTitle === \"\") {\n      alert(\"제목을 입력해주세요.\");\n    } else {\n      alert(\"내용을 입력해주세요.\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"content-container\">\n        <div className=\"wrapper\">\n          <Menu />\n          <div className=\"documentroom_container\">\n            <form>\n              <input\n                className=\"form-input input_title\"\n                placeholder=\"제목을 입력하세요\"\n                type=\"text\"\n                value={boardTitle}\n                onChange={onChangeBoardTitle}\n              />\n              <div className=\"w-full mb-4\">\n                <div className=\"w-full\">\n                  <ReactQuill\n                    theme=\"snow\"\n                    placeholder=\"내용을 입력하세요\"\n                    value={boardContent}\n                    onChange={onChangeBoardContent}\n                  />\n                </div>\n              </div>\n              <div className={\"buttons\"}>\n                <button\n                  className=\"btn btn-default bg-transparent hover:bg-blue-50 text-blue-500 hover:text-blue-600 btn-rounded btn-raised\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={(e) => {\n                    window.location.href = \"/opinion\";\n                  }}\n                >\n                  취소하기\n                </button>\n                <button\n                  className=\"btn btn-default bg-blue-500 hover:bg-blue-600 text-white btn-rounded\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={edit}\n                >\n                  수정하기\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OpinionRegister;\n"]},"metadata":{},"sourceType":"module"}