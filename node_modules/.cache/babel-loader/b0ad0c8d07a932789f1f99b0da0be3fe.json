{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\src\\\\components\\\\independent\\\\webRTCRoom\\\\InviteDialog.jsx\";\n\n/**\n * 담당자:조윤영\n * [OUTLINE]\n * InviteDialog파일은 네비게이션 바에서 사용자 선택 시 띄워지는 사용자 초대 링크 다이얼로그 컴포넌트\n * <p>\n * [METHOD]\n * showDropdownMenu(event): 사용차 목록/초대 다이얼로그 컴포넌트를 보여주는 함수\n * hideDropdownMenu(): 사용차 목록/초대 다이얼로그 컴포넌트를 숨기는 함수\n *\n * <p>\n * [LIBRARY]\n * 1. react-spring: react-spring의 슬라이드 애니메이션 라이브러리\n * 2. delay: 애니메이션의 지연을 주는 라이브러리\n */\nimport React, { Component, Fragment } from \"react\";\nimport userProfile from \"../../../assets/home/userProfile.png\";\nimport { InviteContainer, UserContainer, UserText, DivideLine, InviteList, ShowInviteButton, ShortLine, DialogUpperLine } from \"./webrtc.style\";\n/*회의실 참여자 목록 아이템 */\n\nvar item = [/*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(UserContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  width: \"28px\",\n  height: \"28px\",\n  src: userProfile,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(UserText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n}, \"\\uAD8C\\uC8FC\\uD76C Kwon ju Hee\")), /*#__PURE__*/React.createElement(DivideLine, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}))];\n\nvar InviteDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(InviteDialog, _React$Component);\n\n  //TODO:videoItem에서의 props에서 state값 중 roomisAppear인지 확인한 후 true일 경우 roomToken가져와서 input value에 setting해줘야 한다.\n  function InviteDialog() {\n    var _this;\n\n    _classCallCheck(this, InviteDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InviteDialog).call(this));\n\n    _this.onURLCopy = function (e) {\n      console.log(\"hi\");\n      e.style.background = \"red\"; // console.log(`https://a.chameleon4switch.cf${window.location.pathname}`);\n    };\n\n    _this.state = {\n      displayMenu: false //펼쳐지지 않은 상태로 초기화한다.\n\n    };\n    return _this;\n  }\n\n  _createClass(InviteDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var memberList = this.props.memberList;\n      return /*#__PURE__*/React.createElement(InviteContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(InviteList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogUpperLine, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ShortLine, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      })), Object.keys(memberList).map(function (memberId) {\n        var name = memberList[memberId].name;\n        var nameEn = memberList[memberId].nameEn;\n        var email = memberList[memberId].email;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(UserContainer, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"28px\",\n          height: \"28px\",\n          src: userProfile,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(UserText, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }\n        }, name, \" \", nameEn)), /*#__PURE__*/React.createElement(DivideLine, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(ShowInviteButton, {\n        onClick: this.onURLCopy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"+\\uCD08\\uB300\\uD558\\uAE30\")));\n    }\n  }]);\n\n  return InviteDialog;\n}(React.Component);\n\nexport default InviteDialog;","map":{"version":3,"sources":["C:/Users/o_ov0/Downloads/Front-End-develop/Front-End-develop/client/src/components/independent/webRTCRoom/InviteDialog.jsx"],"names":["React","Component","Fragment","userProfile","InviteContainer","UserContainer","UserText","DivideLine","InviteList","ShowInviteButton","ShortLine","DialogUpperLine","item","InviteDialog","onURLCopy","e","console","log","style","background","state","displayMenu","memberList","props","Object","keys","map","memberId","name","nameEn","email"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;AAcA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,SACEC,eADF,EAEEC,aAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,gBANF,EAOEC,SAPF,EAQEC,eARF,QASO,gBATP;AAWA;;AACA,IAAIC,IAAI,GAAG,cACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,KAAK,EAAC,MAAX;AAAkB,EAAA,MAAM,EAAC,MAAzB;AAAgC,EAAA,GAAG,EAAET,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,CADF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADS,CAAX;;IASMU,Y;;;AACJ;AACA,0BAAc;AAAA;;AAAA;;AACZ;;AADY,UAOdC,SAPc,GAOF,UAAAC,CAAC,EAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,MAAAA,CAAC,CAACG,KAAF,CAAQC,UAAR,GAAqB,KAArB,CAFe,CAGf;AACD,KAXa;;AAGZ,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF,CACQ;;AADR,KAAb;AAHY;AAMb;;;;6BAOQ;AAAA;;AAAA,UACCC,UADD,GACgB,KAAKC,KADrB,CACCD,UADD;AAEP,0BACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIGE,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,GAAxB,CAA4B,UAAAC,QAAQ,EAAI;AACvC,YAAMC,IAAI,GAAGN,UAAU,CAACK,QAAD,CAAV,CAAqBC,IAAlC;AACA,YAAMC,MAAM,GAAGP,UAAU,CAACK,QAAD,CAAV,CAAqBE,MAApC;AACA,YAAMC,KAAK,GAAGR,UAAU,CAACK,QAAD,CAAV,CAAqBG,KAAnC;AACA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,KAAK,EAAC,MAAX;AAAkB,UAAA,MAAM,EAAC,MAAzB;AAAgC,UAAA,GAAG,EAAE3B,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGyB,IADH,OACUC,MADV,CAFF,CADF,eAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF;AAWD,OAfA,CAJH,eAqBE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKf,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCArBF,CADF,CADF;AA+BD;;;;EAhDwBd,KAAK,CAACC,S;;AAmDjC,eAAeY,YAAf","sourcesContent":["/**\n * 담당자:조윤영\n * [OUTLINE]\n * InviteDialog파일은 네비게이션 바에서 사용자 선택 시 띄워지는 사용자 초대 링크 다이얼로그 컴포넌트\n * <p>\n * [METHOD]\n * showDropdownMenu(event): 사용차 목록/초대 다이얼로그 컴포넌트를 보여주는 함수\n * hideDropdownMenu(): 사용차 목록/초대 다이얼로그 컴포넌트를 숨기는 함수\n *\n * <p>\n * [LIBRARY]\n * 1. react-spring: react-spring의 슬라이드 애니메이션 라이브러리\n * 2. delay: 애니메이션의 지연을 주는 라이브러리\n */\nimport React, { Component, Fragment } from \"react\";\nimport userProfile from \"../../../assets/home/userProfile.png\";\n\nimport {\n  InviteContainer,\n  UserContainer,\n  UserText,\n  DivideLine,\n  InviteList,\n  ShowInviteButton,\n  ShortLine,\n  DialogUpperLine\n} from \"./webrtc.style\";\n\n/*회의실 참여자 목록 아이템 */\nvar item = [\n  <div>\n    <UserContainer>\n      <img width=\"28px\" height=\"28px\" src={userProfile} />\n      <UserText>권주희 Kwon ju Hee</UserText>\n    </UserContainer>\n    <DivideLine />\n  </div>\n];\nclass InviteDialog extends React.Component {\n  //TODO:videoItem에서의 props에서 state값 중 roomisAppear인지 확인한 후 true일 경우 roomToken가져와서 input value에 setting해줘야 한다.\n  constructor() {\n    super();\n\n    this.state = {\n      displayMenu: false //펼쳐지지 않은 상태로 초기화한다.\n    };\n  }\n  onURLCopy = e => {\n    console.log(\"hi\");\n    e.style.background = \"red\";\n    // console.log(`https://a.chameleon4switch.cf${window.location.pathname}`);\n  };\n\n  render() {\n    const { memberList } = this.props;\n    return (\n      <InviteContainer>\n        <InviteList>\n          <DialogUpperLine>\n            <ShortLine />\n          </DialogUpperLine>\n          {Object.keys(memberList).map(memberId => {\n            const name = memberList[memberId].name;\n            const nameEn = memberList[memberId].nameEn;\n            const email = memberList[memberId].email;\n            return (\n              <div>\n                <UserContainer>\n                  <img width=\"28px\" height=\"28px\" src={userProfile} />\n                  <UserText>\n                    {name} {nameEn}\n                  </UserText>\n                </UserContainer>\n                <DivideLine />\n              </div>\n            );\n          })}\n\n          <ShowInviteButton onClick={this.onURLCopy}>\n            +초대하기\n          </ShowInviteButton>\n\n          {/* <input value=\"https://a.chameleon4switch.cf{window.location.pathname}\"></input> */}\n        </InviteList>\n      </InviteContainer>\n    );\n  }\n}\n\nexport default InviteDialog;\n"]},"metadata":{},"sourceType":"module"}