{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\src\\\\components\\\\independent\\\\issue\\\\issues\\\\IssueBox.jsx\";\nimport React, { Component } from \"react\";\nimport IssueItem from \"../issueItem/IssueItem\";\nimport IssueAdd from \"../issueAdd/IssueAdd\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport FreeScrollBar from \"react-free-scrollbar\";\nimport * as service from \"../../../../services/IssueService\";\nimport { Container, ItemList, IssuesTitle, IssuesTitleStatus, IssuesTitleCount } from \"./issues.style\";\nexport var IssueBox = /*#__PURE__*/function (_Component) {\n  _inherits(IssueBox, _Component);\n\n  function IssueBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IssueBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IssueBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      taskItemLists: []\n    };\n    return _this;\n  }\n\n  _createClass(IssueBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          column = _this$props.column,\n          count = _this$props.count,\n          tasks = _this$props.tasks,\n          droppableId = _this$props.droppableId; //TODO: backgroundColor: $(props.isDraggingOver ? 'skyblue':'white');\n\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IssuesTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IssuesTitleStatus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, column.status), /*#__PURE__*/React.createElement(IssuesTitleCount, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, count)), /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: column.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(ItemList, Object.assign({\n          ref: provided.innerRef\n        }, provided.droppableProps, {\n          isDraggingOver: snapshot.isDraggingOver,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(FreeScrollBar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }\n        }, tasks.map(function (task, index) {\n          return /*#__PURE__*/React.createElement(IssueItem, {\n            status: column.status,\n            key: task._id,\n            task: task,\n            taskId: index,\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }\n          });\n        }), provided.placeholder));\n      }), /*#__PURE__*/React.createElement(IssueAdd, {\n        key: column._id,\n        id: \"addIssue\",\n        status: column.status,\n        currentDep: this.props.currentDep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return IssueBox;\n}(Component);\nexport default IssueBox;","map":{"version":3,"sources":["C:/Users/o_ov0/Downloads/Front-End-develop/Front-End-develop/client/src/components/independent/issue/issues/IssueBox.jsx"],"names":["React","Component","IssueItem","IssueAdd","Droppable","FreeScrollBar","service","Container","ItemList","IssuesTitle","IssuesTitleStatus","IssuesTitleCount","IssueBox","state","taskItemLists","props","column","count","tasks","droppableId","status","provided","snapshot","innerRef","droppableProps","isDraggingOver","map","task","index","_id","placeholder","currentDep"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,mCAAzB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,iBAJF,EAKEC,gBALF,QAMO,gBANP;AAQA,WAAaC,QAAb;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KADV;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAGW;AAAA;;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBC,KADhB,eACgBA,KADhB;AAAA,UACuBC,WADvB,eACuBA,WADvB,EAGP;;AAEA,0BACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBH,MAAM,CAACI,MAA3B,CADF,eAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBH,KAAnB,CAHF,CADF,eAME,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAED,MAAM,CAACI,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACC,QAAD,EAAWC,QAAX;AAAA,4BACC,oBAAC,QAAD;AACE,UAAA,GAAG,EAAED,QAAQ,CAACE;AADhB,WAEMF,QAAQ,CAACG,cAFf;AAGE,UAAA,cAAc,EAAEF,QAAQ,CAACG,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGP,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,8BACE,oBAAC,SAAD;AACE,YAAA,MAAM,EAAEZ,MAAM,CAACI,MADjB;AAEE,YAAA,GAAG,EAAEO,IAAI,CAACE,GAFZ;AAGE,YAAA,IAAI,EAAEF,IAHR;AAIE,YAAA,MAAM,EAAEC,KAJV;AAKE,YAAA,KAAK,EAAEA,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,SAVA,CADH,EAYGP,QAAQ,CAACS,WAZZ,CALF,CADD;AAAA,OADH,CANF,eA8BE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEd,MAAM,CAACa,GADd;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,MAAM,EAAEb,MAAM,CAACI,MAHjB;AAIE,QAAA,UAAU,EAAE,KAAKL,KAAL,CAAWgB,UAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,CADF;AAuCD;AA/CH;;AAAA;AAAA,EAA8B9B,SAA9B;AAkDA,eAAeW,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport IssueItem from \"../issueItem/IssueItem\";\nimport IssueAdd from \"../issueAdd/IssueAdd\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport FreeScrollBar from \"react-free-scrollbar\";\n\nimport * as service from \"../../../../services/IssueService\";\nimport {\n  Container,\n  ItemList,\n  IssuesTitle,\n  IssuesTitleStatus,\n  IssuesTitleCount\n} from \"./issues.style\";\n\nexport class IssueBox extends Component {\n  state = { taskItemLists: [] };\n\n  render() {\n    const { column, count, tasks, droppableId } = this.props;\n\n    //TODO: backgroundColor: $(props.isDraggingOver ? 'skyblue':'white');\n\n    return (\n      <Container>\n        <IssuesTitle>\n          <IssuesTitleStatus>{column.status}</IssuesTitleStatus>\n\n          <IssuesTitleCount>{count}</IssuesTitleCount>\n        </IssuesTitle>\n        <Droppable droppableId={column.status}>\n          {(provided, snapshot) => (\n            <ItemList\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              isDraggingOver={snapshot.isDraggingOver}\n            >\n              <FreeScrollBar>\n                {tasks.map((task, index) => {\n                  return (\n                    <IssueItem\n                      status={column.status}\n                      key={task._id}\n                      task={task}\n                      taskId={index}\n                      index={index}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </FreeScrollBar>\n            </ItemList>\n          )}\n        </Droppable>\n        <IssueAdd\n          key={column._id}\n          id=\"addIssue\"\n          status={column.status}\n          currentDep={this.props.currentDep}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default IssueBox;\n"]},"metadata":{},"sourceType":"module"}