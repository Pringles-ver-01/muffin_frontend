{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\src\\\\components\\\\independent\\\\conferenceDocument\\\\ConferencePosts.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Posts from \"./Posts\";\nimport Pagination from \"./Pagination\";\nimport axios from \"axios\";\nimport DocData from \"./data/doc.json\"; // import \"./App.css\";\n\nvar ConferencePosts = function ConferencePosts() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(10),\n      _useState8 = _slicedToArray(_useState7, 1),\n      postsPerPage = _useState8[0];\n\n  useEffect(function () {\n    var fetchPosts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n\n              case 3:\n                res = _context.sent;\n                setPosts(res.data);\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []); // current posts 가져오기\n\n  var indexOfLastPost = currentPage * postsPerPage;\n  var indexOfFirstPost = indexOfLastPost - postsPerPage;\n  var currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // page 바꾸기\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    posts: currentPosts,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ConferencePosts;","map":{"version":3,"sources":["C:/Users/o_ov0/Downloads/Front-End-develop/Front-End-develop/client/src/components/independent/conferenceDocument/ConferencePosts.js"],"names":["React","useState","useEffect","Posts","Pagination","axios","DocData","ConferencePosts","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","get","res","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CACA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,kBACFN,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACrBO,KADqB;AAAA,MACdC,QADc;;AAAA,mBAEER,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,MAErBS,OAFqB;AAAA,MAEZC,UAFY;;AAAA,mBAGUV,QAAQ,CAAC,CAAD,CAHlB;AAAA;AAAA,MAGrBW,WAHqB;AAAA,MAGRC,cAHQ;;AAAA,mBAILZ,QAAQ,CAAC,EAAD,CAJH;AAAA;AAAA,MAIrBa,YAJqB;;AAM5BZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBJ,gBAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;AAAA,uBAECN,KAAK,CAACW,GAAN,CAAU,4CAAV,CAFD;;AAAA;AAEXC,gBAAAA,GAFW;AAGjBR,gBAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACAP,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVI,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAOAA,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT,CAN4B,CAiB5B;;AACA,MAAMI,eAAe,GAAGP,WAAW,GAAGE,YAAtC;AACA,MAAMM,gBAAgB,GAAGD,eAAe,GAAGL,YAA3C;AACA,MAAMO,YAAY,GAAGb,KAAK,CAACc,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CApB4B,CAsB5B;;AACA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,UAAU;AAAA,WAAIX,cAAc,CAACW,UAAD,CAAlB;AAAA,GAA3B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,YAAd;AAA4B,IAAA,OAAO,EAAEX,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,UAAU,EAAEN,KAAK,CAACiB,MAFpB;AAGE,IAAA,QAAQ,EAAEF,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAnCD;;AAqCA,eAAehB,eAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Posts from \"./Posts\";\nimport Pagination from \"./Pagination\";\nimport axios from \"axios\";\nimport DocData from \"./data/doc.json\";\n// import \"./App.css\";\n\nconst ConferencePosts = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  // current posts 가져오기\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // page 바꾸기\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container mt-5\">\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default ConferencePosts;\n"]},"metadata":{},"sourceType":"module"}