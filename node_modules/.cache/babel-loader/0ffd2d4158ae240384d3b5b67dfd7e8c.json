{"ast":null,"code":"import axios from \"axios\";\nvar projectAxios = axios.create({\n  baseURL: \"https://a.chameleon4switch.cf/api\",\n  headers: {\n    Authorization: localStorage.getItem(\"jwtToken\")\n  },\n  timeout: 5000\n});\n/**프로젝트 참여자 판단 post*/\n\nexport function projectUser(email) {\n  return projectAxios.post(\"project/participantCheck\", {\n    email: email\n  });\n}\n/**프로젝트 개설 post */\n\nexport function projectAdd(projectName, projectRoles, projectParticipants) {\n  return projectAxios.post(\"project/create\", {\n    projectName: projectName,\n    projectRoles: projectRoles,\n    projectParticipants: projectParticipants\n  }).then(function (res) {\n    console.log(res.data);\n    console.log(\"***************************\");\n    console.log(res.data.message);\n    console.log(\"***************************\");\n    return Promise.resolve(res);\n  });\n}\n/**프로젝트 리스트 get */\n\nexport function getProjectList() {\n  return projectAxios.get(\"project/list\");\n}\n/**프로젝트 참여 첫 판단 */\n\nexport function projectFirst(projectId) {\n  return projectAxios.get(\"project/firstCheck/\" + projectId);\n}\n/**부서 목록 가져오기 */\n\nexport function projectRole(projectId) {\n  return projectAxios.get(\"project/roleList/\" + projectId);\n}\n/**프로젝트 참여 OK */\n\nexport function projectOK(projectId, role) {\n  return projectAxios.post(\"project/participate/\" + projectId, {\n    role: role\n  }).then(function (res) {\n    console.log(res.data);\n    console.log(\"***************************\");\n    console.log(res.data.message);\n    console.log(\"***************************\");\n    return Promise.resolve(res);\n  });\n}\n/**프로젝트 참여 NO */\n\nexport function projectNO(projectId) {\n  return projectAxios.get(\"project/refuse/\" + projectId);\n}","map":{"version":3,"sources":["C:/Users/o_ov0/Downloads/Front-End-develop/Front-End-develop/client/src/services/ProjectService.js"],"names":["axios","projectAxios","create","baseURL","headers","Authorization","localStorage","getItem","timeout","projectUser","email","post","projectAdd","projectName","projectRoles","projectParticipants","then","res","console","log","data","message","Promise","resolve","getProjectList","get","projectFirst","projectId","projectRole","projectOK","role","projectNO"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAE,mCADuB;AAEhCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADR,GAFuB;AAKhCC,EAAAA,OAAO,EAAE;AALuB,CAAb,CAArB;AAOA;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,SAAOT,YAAY,CAACU,IAAb,CAAkB,0BAAlB,EAA8C;AAAED,IAAAA,KAAK,EAALA;AAAF,GAA9C,CAAP;AACD;AAED;;AACA,OAAO,SAASE,UAAT,CAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,mBAA/C,EAAoE;AACzE,SAAOd,YAAY,CAChBU,IADI,CACC,gBADD,EACmB;AAAEE,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,YAAY,EAAZA,YAAf;AAA6BC,IAAAA,mBAAmB,EAAnBA;AAA7B,GADnB,EAEJC,IAFI,CAEC,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,WAAOG,OAAO,CAACC,OAAR,CAAgBN,GAAhB,CAAP;AACD,GATI,CAAP;AAUD;AAED;;AACA,OAAO,SAASO,cAAT,GAA0B;AAC/B,SAAOvB,YAAY,CAACwB,GAAb,CAAiB,cAAjB,CAAP;AACD;AAED;;AACA,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACtC,SAAO1B,YAAY,CAACwB,GAAb,CAAiB,wBAAwBE,SAAzC,CAAP;AACD;AAED;;AAEA,OAAO,SAASC,WAAT,CAAqBD,SAArB,EAAgC;AACrC,SAAO1B,YAAY,CAACwB,GAAb,CAAiB,sBAAsBE,SAAvC,CAAP;AACD;AAED;;AACA,OAAO,SAASE,SAAT,CAAmBF,SAAnB,EAA8BG,IAA9B,EAAoC;AACzC,SAAO7B,YAAY,CAChBU,IADI,CACC,yBAAyBgB,SAD1B,EACqC;AAAEG,IAAAA,IAAI,EAAJA;AAAF,GADrC,EAEJd,IAFI,CAEC,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,WAAOG,OAAO,CAACC,OAAR,CAAgBN,GAAhB,CAAP;AACD,GAVI,CAAP;AAWD;AAED;;AACA,OAAO,SAASc,SAAT,CAAmBJ,SAAnB,EAA8B;AACnC,SAAO1B,YAAY,CAACwB,GAAb,CAAiB,oBAAoBE,SAArC,CAAP;AACD","sourcesContent":["import axios from \"axios\";\n\nconst projectAxios = axios.create({\n  baseURL: \"https://a.chameleon4switch.cf/api\",\n  headers: {\n    Authorization: localStorage.getItem(\"jwtToken\")\n  },\n  timeout: 5000\n});\n/**프로젝트 참여자 판단 post*/\nexport function projectUser(email) {\n  return projectAxios.post(\"project/participantCheck\", { email });\n}\n\n/**프로젝트 개설 post */\nexport function projectAdd(projectName, projectRoles, projectParticipants) {\n  return projectAxios\n    .post(\"project/create\", { projectName, projectRoles, projectParticipants })\n    .then(res => {\n      console.log(res.data);\n\n      console.log(\"***************************\");\n      console.log(res.data.message);\n      console.log(\"***************************\");\n      return Promise.resolve(res);\n    });\n}\n\n/**프로젝트 리스트 get */\nexport function getProjectList() {\n  return projectAxios.get(\"project/list\");\n}\n\n/**프로젝트 참여 첫 판단 */\nexport function projectFirst(projectId) {\n  return projectAxios.get(\"project/firstCheck/\" + projectId);\n}\n\n/**부서 목록 가져오기 */\n\nexport function projectRole(projectId) {\n  return projectAxios.get(\"project/roleList/\" + projectId);\n}\n\n/**프로젝트 참여 OK */\nexport function projectOK(projectId, role) {\n  return projectAxios\n    .post(\"project/participate/\" + projectId, { role })\n    .then(res => {\n      console.log(res.data);\n\n      console.log(\"***************************\");\n      console.log(res.data.message);\n      console.log(\"***************************\");\n\n      return Promise.resolve(res);\n    });\n}\n\n/**프로젝트 참여 NO */\nexport function projectNO(projectId) {\n  return projectAxios.get(\"project/refuse/\" + projectId);\n}\n"]},"metadata":{},"sourceType":"module"}