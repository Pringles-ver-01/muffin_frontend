{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\o_ov0\\\\Downloads\\\\Front-End-develop\\\\Front-End-develop\\\\client\\\\src\\\\services\\\\postTest.jsx\";\nimport React, { Component } from \"react\";\nimport * as service from \"./post\";\nimport ChilePostTest from \"./childPostTest\";\nimport NavPostTest from \"./navPostTest\";\nexport var postTest = /*#__PURE__*/function (_Component) {\n  _inherits(postTest, _Component);\n\n  function postTest(props) {\n    var _this;\n\n    _classCallCheck(this, postTest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(postTest).call(this));\n\n    _this.fetchPostInfo = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(postId) {\n        var info, _info$0$data, title, body, comments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  fetching: true\n                });\n\n                _context.prev = 1;\n                _context.next = 4;\n                return Promise.all([service.getPost(postId), service.getComments(postId)]);\n\n              case 4:\n                info = _context.sent;\n                console.log(info);\n                _info$0$data = info[0].data, title = _info$0$data.title, body = _info$0$data.body; //const { a, b } = c 의 형식의 코드는 ES6 의 Object Destructuring (객체 비구조화 할당)문법입니다.\n\n                comments = info[1].data;\n\n                _this.setState({\n                  postId: postId,\n                  post: {\n                    title: title,\n                    body: body\n                  },\n                  comments: comments,\n                  fetching: false //done!\n\n                });\n\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n\n                _this.setState({\n                  fetching: false\n                });\n\n                console.log(\"error occurred\", _context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleNavigateClick = function (type) {\n      var postId = _this.state.postId;\n\n      if (type == \"NEXT\") {\n        _this.fetchPostInfo(postId + 1);\n      } else {\n        _this.fetchPostInfo(postId - 1);\n      }\n    };\n\n    _this.componentDidMount = function () {\n      _this.fetchPostInfo(1);\n    };\n\n    _this.state = {\n      postId: 1,\n      //현재 포스트의 번호\n      fetching: false,\n      //요청의 완료 여부\n      post: {\n        title: null,\n        body: null\n      },\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(postTest, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          postId = _this$state.postId,\n          fetching = _this$state.fetching,\n          post = _this$state.post,\n          comments = _this$state.comments;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, \"\\uBD80\\uBAA8\\uBD80\\uBAA8\", /*#__PURE__*/React.createElement(NavPostTest, {\n        postId: postId,\n        disabled: fetching,\n        onClick: this.handleNavigateClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ChilePostTest, {\n        title: post.title,\n        body: post.body,\n        comments: comments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return postTest;\n}(Component);\nexport default postTest;","map":{"version":3,"sources":["C:/Users/o_ov0/Downloads/Front-End-develop/Front-End-develop/client/src/services/postTest.jsx"],"names":["React","Component","service","ChilePostTest","NavPostTest","postTest","props","fetchPostInfo","postId","setState","fetching","Promise","all","getPost","getComments","info","console","log","data","title","body","comments","post","handleNavigateClick","type","state","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as service from \"./post\";\nimport ChilePostTest from \"./childPostTest\";\nimport NavPostTest from \"./navPostTest\";\nexport class postTest extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      postId: 1, //현재 포스트의 번호\n      fetching: false, //요청의 완료 여부\n      post: {\n        title: null,\n        body: null\n      },\n      comments: []\n    };\n  }\n\n  fetchPostInfo = async postId => {\n    this.setState({\n      fetching: true\n    });\n\n    try {\n      const info = await Promise.all([\n        service.getPost(postId),\n        service.getComments(postId)\n      ]);\n\n      console.log(info);\n\n      const { title, body } = info[0].data; //const { a, b } = c 의 형식의 코드는 ES6 의 Object Destructuring (객체 비구조화 할당)문법입니다.\n      const comments = info[1].data;\n\n      this.setState({\n        postId,\n        post: {\n          title,\n          body\n        },\n        comments,\n        fetching: false //done!\n      });\n    } catch (e) {\n      this.setState({\n        fetching: false\n      });\n      console.log(\"error occurred\", e);\n    }\n  };\n\n  handleNavigateClick = type => {\n    const postId = this.state.postId;\n\n    if (type == \"NEXT\") {\n      this.fetchPostInfo(postId + 1);\n    } else {\n      this.fetchPostInfo(postId - 1);\n    }\n  };\n  componentDidMount = () => {\n    this.fetchPostInfo(1);\n  };\n  render() {\n    const { postId, fetching, post, comments } = this.state;\n    return (\n      <div>\n        부모부모\n        <NavPostTest\n          postId={postId}\n          disabled={fetching}\n          onClick={this.handleNavigateClick}\n        />\n        <ChilePostTest\n          title={post.title}\n          body={post.body}\n          comments={comments}\n        />\n      </div>\n    );\n  }\n}\n\nexport default postTest;\n"]},"metadata":{},"sourceType":"module"}