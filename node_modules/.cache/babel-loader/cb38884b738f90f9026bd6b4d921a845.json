{"ast":null,"code":"import axios from \"axios\";\nvar confCreateAxios = axios.create({\n  baseURL: \"https://a.chameleon4switch.cf/api\",\n  headers: {\n    ContentType: \"application/json\",\n    Authorization: localStorage.getItem(\"jwtToken\")\n  },\n  timeout: 5000\n});\n/**회의실 생성하기 */\n\nexport function confCreate(projectId, title, mainTopics, startTime, members) {\n  return confCreateAxios.post(\"conf_room/create/\" + projectId, {\n    title: title,\n    mainTopics: mainTopics,\n    startTime: startTime,\n    members: members\n  }).then(function (res) {\n    console.log(res.data);\n    console.log(\"***************************\");\n    console.log(res.data.message);\n    console.log(\"***************************\");\n    return Promise.resolve(res);\n  });\n}\n/**회의실 참여자 이름 검색 */\n\nexport function confParticipants(projectId, userName) {\n  return confCreateAxios.post(\"conf_room/memberCheck/\" + projectId, {\n    userName: userName\n  }).then(function (res) {\n    console.log(res.data);\n    console.log(\"***************************\");\n    console.log(res.data.message);\n    console.log(\"***************************\");\n    return Promise.resolve(res);\n  });\n}\nexport function confProceed(projectId) {\n  return confCreateAxios.get(\"conf_room/proceedList/\".concat(projectId));\n}\n/**내가 포함된 회의 목록 */\n\nexport function confInclude(projectId) {\n  return confCreateAxios.get(\"conf_room/includedList/\".concat(projectId));\n}\n/**회의 참여자 목록 */\n\nexport function confShowParticipants(projectId, roomId) {\n  return confCreateAxios.post(\"conf_room/memberList/\".concat(projectId, \"/\").concat(roomId)).then(function (res) {\n    console.log(res.data);\n    console.log(\"***************************\");\n    console.log(res.data.message);\n    console.log(\"***************************\");\n    return Promise.resolve(res);\n  });\n}","map":{"version":3,"sources":["C:/Users/o_ov0/Downloads/Front-End-develop/Front-End-develop/client/src/services/ConferenceRoomService.js"],"names":["axios","confCreateAxios","create","baseURL","headers","ContentType","Authorization","localStorage","getItem","timeout","confCreate","projectId","title","mainTopics","startTime","members","post","then","res","console","log","data","message","Promise","resolve","confParticipants","userName","confProceed","get","confInclude","confShowParticipants","roomId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAa;AACnCC,EAAAA,OAAO,EAAE,mCAD0B;AAEnCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE,kBADN;AAEPC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFR,GAF0B;AAMnCC,EAAAA,OAAO,EAAE;AAN0B,CAAb,CAAxB;AASA;;AACA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,UAAtC,EAAkDC,SAAlD,EAA6DC,OAA7D,EAAsE;AAC3E,SAAOd,eAAe,CACnBe,IADI,CACC,sBAAsBL,SADvB,EACkC;AACrCC,IAAAA,KAAK,EAALA,KADqC;AAErCC,IAAAA,UAAU,EAAVA,UAFqC;AAGrCC,IAAAA,SAAS,EAATA,SAHqC;AAIrCC,IAAAA,OAAO,EAAPA;AAJqC,GADlC,EAOJE,IAPI,CAOC,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,WAAOG,OAAO,CAACC,OAAR,CAAgBN,GAAhB,CAAP;AACD,GAfI,CAAP;AAgBD;AAED;;AACA,OAAO,SAASO,gBAAT,CAA0Bd,SAA1B,EAAqCe,QAArC,EAA+C;AACpD,SAAOzB,eAAe,CACnBe,IADI,CACC,2BAA2BL,SAD5B,EACuC;AAAEe,IAAAA,QAAQ,EAARA;AAAF,GADvC,EAEJT,IAFI,CAEC,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,WAAOG,OAAO,CAACC,OAAR,CAAgBN,GAAhB,CAAP;AACD,GAVI,CAAP;AAWD;AAED,OAAO,SAASS,WAAT,CAAqBhB,SAArB,EAAgC;AACrC,SAAOV,eAAe,CAAC2B,GAAhB,iCAA6CjB,SAA7C,EAAP;AACD;AAED;;AACA,OAAO,SAASkB,WAAT,CAAqBlB,SAArB,EAAgC;AACrC,SAAOV,eAAe,CAAC2B,GAAhB,kCAA8CjB,SAA9C,EAAP;AACD;AAED;;AACA,OAAO,SAASmB,oBAAT,CAA8BnB,SAA9B,EAAyCoB,MAAzC,EAAiD;AACtD,SAAO9B,eAAe,CACnBe,IADI,gCACyBL,SADzB,cACsCoB,MADtC,GAEJd,IAFI,CAEC,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,WAAOG,OAAO,CAACC,OAAR,CAAgBN,GAAhB,CAAP;AACD,GAVI,CAAP;AAWD","sourcesContent":["import axios from \"axios\";\n\nconst confCreateAxios = axios.create({\n  baseURL: \"https://a.chameleon4switch.cf/api\",\n  headers: {\n    ContentType: \"application/json\",\n    Authorization: localStorage.getItem(\"jwtToken\")\n  },\n  timeout: 5000\n});\n\n/**회의실 생성하기 */\nexport function confCreate(projectId, title, mainTopics, startTime, members) {\n  return confCreateAxios\n    .post(\"conf_room/create/\" + projectId, {\n      title,\n      mainTopics,\n      startTime,\n      members\n    })\n    .then(res => {\n      console.log(res.data);\n\n      console.log(\"***************************\");\n      console.log(res.data.message);\n      console.log(\"***************************\");\n\n      return Promise.resolve(res);\n    });\n}\n\n/**회의실 참여자 이름 검색 */\nexport function confParticipants(projectId, userName) {\n  return confCreateAxios\n    .post(\"conf_room/memberCheck/\" + projectId, { userName })\n    .then(res => {\n      console.log(res.data);\n\n      console.log(\"***************************\");\n      console.log(res.data.message);\n      console.log(\"***************************\");\n\n      return Promise.resolve(res);\n    });\n}\n\nexport function confProceed(projectId) {\n  return confCreateAxios.get(`conf_room/proceedList/${projectId}`);\n}\n\n/**내가 포함된 회의 목록 */\nexport function confInclude(projectId) {\n  return confCreateAxios.get(`conf_room/includedList/${projectId}`);\n}\n\n/**회의 참여자 목록 */\nexport function confShowParticipants(projectId, roomId) {\n  return confCreateAxios\n    .post(`conf_room/memberList/${projectId}/${roomId}`)\n    .then(res => {\n      console.log(res.data);\n\n      console.log(\"***************************\");\n      console.log(res.data.message);\n      console.log(\"***************************\");\n\n      return Promise.resolve(res);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}